buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version "0.2.0"
group "com.morpheus.grails.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin: 'java-library'
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    api group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    api "org.grails.plugins:hibernate5"
    implementation "org.grails.plugins:cache"
    api 'org.elasticsearch.client:elasticsearch-rest-client:7.9.0'
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.mockito:mockito-core"
    testCompile "org.grails:grails-web-testing-support"
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify', 
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}
// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false

bintray {
    publications = ['maven']
    pkg {
        githubRepo = 'gomorpheus/grails-elasticsearch-rest' //Optional Github repository
        githubReleaseNotesFile = 'README.md' //Optional Github readme file
        repo = 'grails3-plugins'
        userOrg = 'bertramlabs'
        licenses = ['Apache-2.0']
    }
}

grailsPublish {
    if(project.hasProperty('bintrayUser')) {
        user = bintrayUser
        key = bintrayKey
    }
    userOrg = 'bertramlabs'
    githubSlug = 'gomorpheus/grails-elasticsearch-rest'
    license {
        name = 'Apache-2.0'
    }
    title = "Grails REST ElasticSearch Plugin"
    desc = "Full plugin description"
    developers = [davydotcom:"David Estes"]
}
